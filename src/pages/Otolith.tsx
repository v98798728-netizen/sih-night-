import React, { useState } from 'react';
import { Upload, Image, Eye, Download, Zap, FileImage } from 'lucide-react';

const Otolith = () => {
  const [dragOver, setDragOver] = useState(false);
  const [uploadedFiles, setUploadedFiles] = useState([]);
  const [analysisResults, setAnalysisResults] = useState(null);
  const [pendingAnalysis, setPendingAnalysis] = useState(null);
  const fileInputRef = React.useRef(null);

  // Simulated database of known otolith images
  const knownOtoliths = [
    'otolith_001.jpg',
    'otolith_002.jpg', 
    'otolith_004.jpg',
    'cod_otolith_sample.jpg',
    'tuna_otolith_ref.jpg'
  ];

  const sampleResults = {
    species: "Atlantic Cod",
    confidence: 92,
    age: "4-5 years",
    growth_rate: "Normal",
    environmental_conditions: "Optimal"
  };

  const sampleGallery = [
    { id: 1, name: "otolith_001.jpg", species: "Atlantic Cod", age: "3 years", analyzed: true },
    { id: 2, name: "otolith_002.jpg", species: "Bluefin Tuna", age: "7 years", analyzed: true },
    { id: 3, name: "otolith_003.jpg", species: "Atlantic Salmon", age: "2 years", analyzed: false },
    { id: 4, name: "otolith_004.jpg", species: "Mackerel", age: "4 years", analyzed: true },
  ];

  const handleDragOver = (e) => {
    e.preventDefault();
    setDragOver(true);
  };

  const handleDragLeave = () => {
    setDragOver(false);
  };

  const handleDrop = (e) => {
    e.preventDefault();
    setDragOver(false);
    const files = Array.from(e.dataTransfer.files);
    setUploadedFiles(prev => [...prev, ...files]);
  };

  const handleAnalyze = (file) => {
    // Check if the file exists in our database
    const isKnownOtolith = knownOtoliths.some(known => 
      file.name.toLowerCase().includes(known.toLowerCase().split('.')[0]) ||
      known.toLowerCase().includes(file.name.toLowerCase().split('.')[0])
    );

    if (isKnownOtolith) {
      // File exists in database - show analysis results
      setAnalysisResults(sampleResults);
      setPendingAnalysis(null);
    } else {
      // File not in database - show pending message
      setPendingAnalysis(file.name);
      setAnalysisResults(null);
    }
  };

  const handleChooseFiles = () => {
    fileInputRef.current?.click();
  };

  const handleFileSelect = (e) => {
    const files = Array.from(e.target.files);
    setUploadedFiles(prev => [...prev, ...files]);
  };

  const handleDownloadReport = () => {
    const reportContent = `Otolith Analysis Report

Analysis Results:
- Species: ${analysisResults.species}
- Confidence: ${analysisResults.confidence}%
- Estimated Age: ${analysisResults.age}
- Growth Rate: ${analysisResults.growth_rate}
- Environmental Conditions: ${analysisResults.environmental_conditions}

Generated by Shark Marine Platform
Date: ${new Date().toLocaleDateString()}`;
    
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'otolith-analysis-report.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="py-12 px-6 min-h-screen">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-semibold text-ocean-800 mb-4 animate-float">Otolith Analysis</h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Upload otolith images for AI-powered species identification and age estimation
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 mb-12">
          {/* Upload Section */}
          <div className="space-y-6">
            <h2 className="text-2xl font-semibold text-ocean-800">Upload Otolith Images</h2>
            
            <div
              className={`glass rounded-2xl border-2 border-dashed p-8 text-center transition-all duration-300 glow-soft ${
                dragOver ? 'border-ocean-500 glass-ocean' : 'border-white/30 hover:border-ocean-500'
              }`}
              onDragOver={handleDragOver}
              onDragLeave={handleDragLeave}
              onDrop={handleDrop}
            >
              <Upload className="w-12 h-12 text-ocean-600 mx-auto mb-4 animate-pulse-soft" />
              <h3 className="text-lg font-medium text-ocean-800 mb-2">Drop your otolith images here</h3>
              <p className="text-gray-600 mb-4">or click to browse files</p>
              <button 
                onClick={handleChooseFiles}
                className="glass-ocean text-white px-6 py-2 rounded-md glow-hover transition-all duration-200"
              >
                Choose Files
              </button>
              <input
                ref={fileInputRef}
                type="file"
                multiple
                accept="image/*"
                onChange={handleFileSelect}
                className="hidden"
              />
              <p className="text-sm text-gray-500 mt-2">Supports JPG, PNG, TIFF files up to 10MB</p>
            </div>

            {/* Uploaded Files */}
            {uploadedFiles.length > 0 && (
              <div className="glass rounded-2xl p-6 glow-soft">
                <h3 className="text-lg font-semibold text-ocean-800 mb-4">Uploaded Files</h3>
                <div className="space-y-3">
                  {uploadedFiles.map((file, index) => (
                    <div key={index} className="flex items-center justify-between p-3 glass-dark rounded-lg">
                      <div className="flex items-center space-x-3">
                        <FileImage className="w-5 h-5 text-ocean-600" />
                        <span className="text-sm font-medium text-ocean-800">{file.name}</span>
                      </div>
                      <button
                        onClick={() => handleAnalyze(file)}
                        className="glass-ocean text-white px-4 py-2 rounded-md text-sm glow-hover transition-all duration-200 flex items-center space-x-2"
                      >
                        <Zap className="w-4 h-4" />
                        <span>Analyze</span>
                      </button>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>

          {/* Analysis Results */}
          <div className="space-y-6">
            <h2 className="text-2xl font-semibold text-ocean-800">Analysis Results</h2>
            
            {analysisResults ? (
              <div className="glass rounded-2xl p-6 border border-ocean-500 glow-soft">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-ocean-800">Species Identification</h3>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                    <span className="text-sm text-green-600 font-medium">Analysis Complete</span>
                  </div>
                </div>
                
                <div className="space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-gray-600">Species</p>
                      <p className="text-lg font-semibold text-ocean-800">{analysisResults.species}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">Confidence</p>
                      <div className="flex items-center space-x-2">
                        <div className="flex-1 bg-gray-200 rounded-full h-2">
                          <div 
                            className="bg-gradient-to-r from-ocean-500 to-aqua-500 h-2 rounded-full transition-all duration-500"
                            style={{ width: `${analysisResults.confidence}%` }}
                          ></div>
                        </div>
                        <span className="text-sm font-semibold text-ocean-700">{analysisResults.confidence}%</span>
                      </div>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-gray-600">Estimated Age</p>
                      <p className="text-lg font-semibold text-ocean-800">{analysisResults.age}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">Growth Rate</p>
                      <p className="text-lg font-semibold text-ocean-800">{analysisResults.growth_rate}</p>
                    </div>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-600">Environmental Conditions</p>
                    <p className="text-lg font-semibold text-ocean-800">{analysisResults.environmental_conditions}</p>
                  </div>
                  
                  <button 
                    onClick={handleDownloadReport}
                    className="w-full glass-fishOrange text-white py-3 rounded-lg glow-fishOrange transition-all duration-200 flex items-center justify-center space-x-2"
                  >
                    <Download className="w-4 h-4" />
                    <span>Download Report</span>
                  </button>
                </div>
              </div>
            ) : pendingAnalysis ? (
              <div className="glass rounded-2xl p-6 border border-yellow-300 glow-soft">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-ocean-800">Analysis Pending</h3>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-yellow-400 rounded-full animate-bounce"></div>
                    <span className="text-sm text-yellow-600 font-medium">Under Review</span>
                  </div>
                </div>
                
                <div className="bg-yellow-50 rounded-lg p-4 mb-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center">
                      <FileImage className="w-4 h-4 text-yellow-600" />
                    </div>
                    <div>
                      <p className="font-medium text-yellow-800">Image: {pendingAnalysis}</p>
                      <p className="text-sm text-yellow-700">This otolith is not in our current database</p>
                    </div>
                  </div>
                </div>
                
                <div className="text-center py-4">
                  <h4 className="text-lg font-semibold text-ocean-800 mb-2">Our scientists will work on it</h4>
                  <p className="text-gray-600 mb-4">We will notify you once the analysis is complete</p>
                  <div className="flex items-center justify-center space-x-2 text-sm text-gray-500">
                    <span>Expected completion: 2-3 business days</span>
                  </div>
                </div>
              </div>
            ) : (
              <div className="glass rounded-2xl p-8 text-center glow-soft">
                <Image className="w-12 h-12 text-ocean-400 mx-auto mb-4 animate-pulse-soft" />
                <p className="text-gray-500">Upload otolith images to see analysis results</p>
              </div>
            )}
          </div>
        </div>

        {/* Otolith Gallery */}
        <div className="glass rounded-2xl p-6 glow-soft">
          <h2 className="text-2xl font-semibold text-ocean-800 mb-6">Otolith Gallery</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {sampleGallery.map((item) => (
              <div key={item.id} className="glass-dark rounded-xl p-4 glow-hover transition-all duration-200">
                <div className="h-32 bg-gradient-to-br from-ocean-100 to-aqua-200 rounded-lg mb-3 flex items-center justify-center glow-soft">
                  <div className="text-center">
                    <Image className="w-8 h-8 text-ocean-700 mx-auto mb-1 animate-pulse-soft" />
                    <div className="text-xs text-ocean-700 font-medium">Otolith Sample</div>
                  </div>
                </div>
                <h3 className="font-medium text-ocean-800 mb-1">{item.name}</h3>
                <p className="text-sm text-gray-600">{item.species}</p>
                <p className="text-sm text-gray-600">Age: {item.age}</p>
                <div className="flex items-center justify-between mt-3">
                  <span className={`text-xs px-2 py-1 rounded-full ${
                    item.analyzed ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                  }`}>
                    {item.analyzed ? 'Analyzed' : 'Pending'}
                  </span>
                  <button className="text-ocean-600 hover:scale-110 transition-transform glow-hover">
                    <Eye className="w-4 h-4" />
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Otolith;